% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vacalibration.R
\name{vacalibration}
\alias{vacalibration}
\title{VA-calibration function}
\usage{
vacalibration(
  va_data = NULL,
  age_group = NULL,
  country = NULL,
  Mmat = NULL,
  Mmat_type = c("prior", "fixed", "samples")[1],
  studycause_map = NULL,
  donotcalib = NULL,
  donotcalib_type = c("learn", "fixed")[1],
  nocalib.threshold = 0.1,
  path_correction = TRUE,
  ensemble = NULL,
  shrink_strength = NULL,
  lambda_eBayes = 0,
  nMCMC = 5000,
  nBurn = 5000,
  nThin = 1,
  nChain = 1,
  nCore = 1,
  adapt_delta_stan = 0.9,
  refresh.stan = NULL,
  seed = 1,
  verbose = TRUE,
  saveoutput = FALSE,
  output_filename = NULL,
  output_dir = NULL,
  plot_it = TRUE
)
}
\arguments{
\item{va_data}{A named list. Algorithm-specific unlabeled VA-only data.

For example, \code{list("algo1" = algo1_output, "algo2" = algo2_output, ...)}.

Algorithm names (\code{"algo1"}, \code{"algo2"}, ...) can be "eava", "insilicova", or "interva".

Data (\code{algo1_output}, \code{algo2_output}, ...) can be specific causes (output from \code{codEAVA()} function in \code{EAVA} and \code{crossVA()} function in \code{openVA}), or broad causes (output from the \code{cause_map()} function in this package), or broad-cause-specific death counts (integer vector).

Can be different for different algorithms.

Total number of deaths for different algorithms can be different.}

\item{age_group}{Character. Age-group of interest.

\code{"neonate"} or \code{"child"}.

\code{"neonate"} ages between 0-27 days, or \code{"child"} ages between 1-59 months.}

\item{country}{Character. The country \code{va_data} is from.

Country-specific calibration is possible for "Bangladesh", "Ethiopia", "Kenya", "Mali", "Mozambique", "Sierra Leone", "South Africa".

Any other country is matched with "other".}

\item{Mmat}{A named list. Similarly structured as \code{va_data}.

Needed only if \code{calibmodel.type = "Mmatprior"} (propagates uncertainty).

For example, \code{list("algo1" = Mmat.asDirich_algo1, "algo2" = Mmat.asDirich_algo2, ...)}.

List of algorithm-specific Dirichlet prior on misclassification matrix to be used for calibration.

Names and length must be identical to \code{va_data}.

If algorithm names (\code{"algo1"}, \code{"algo2"}, ...) are \code{"eava"}, \code{"insilicova"} or \code{"interva"}, and \code{Mmat.asDirich} is missing, it by default uses the CHAMPS-based estimates (Dirichlet approximation of posterior) stored in \code{Mmat_champs} in this package.

See \code{Mmat_champs} for details.

If \code{Mmat.asDirich} is not missing, whatever provided is used.

If any algorithm name (\code{"algo1"}, \code{"algo2"}, ...) is different from \code{"eava"}, \code{"insilicova"} or \code{"interva"}, \code{Mmat.asDirich} must be provided.

\code{Mmat.asDirich_algo1} is a matrix of dimension CHAMPS ("gold standard") cause X VA cause.

\code{Dirichlet(Mmat.asDirich_algo1[i,])} is used as informative prior on classification rates for CHAMPS cause \code{i}.}

\item{Mmat_type}{Character. How to utilize misclassification estimates.

\code{"Mmatprior"} (default). Propagates uncertainty in the misclassification matrix estimates.

\code{"Mmatfixed"}. Uses fixed (default: posterior mean) misclassification matrix estimates.}

\item{studycause_map}{Character vector. A character vector specifying the mapping of study-specific causes to CHAMPS causes.

This argument is required when study causes differ from, and are not a subset of, CHAMPS causes.

The input should be provided in the format: \code{c("study_cause1" = "pneumonia", "study_cause2" = "ipre", "study_cause3" = "other", "study_cause4" = "other")}.}

\item{donotcalib}{A named list. Similarly structured as \code{va_data}, \code{Mmat.asDirich}, or \code{Mmat.fixed}.

List of broad causes for each CCVA algorithm that we do not want to calibrate

Default: \code{list("eava"="other", "insilicova"="other", "interva"="other")}. That is, \code{"other"} cause is not calibrated.

For neonates, the broad causes are \code{"congenital_malformation"}, \code{"pneumonia"}, \code{"sepsis_meningitis_inf"}, \code{"ipre"}, \code{"other"}, or \code{"prematurity"}.

For children, the broad causes are \code{"malaria"}, \code{"pneumonia"}, \code{"diarrhea"}, \code{"severe_malnutrition"}, \code{"hiv"}, \code{"injury"}, \code{"other"}, \code{"other_infections"}, \code{"nn_causes"} (neonatal causes).

Set \code{list("eava" = NULL, "insilicova" = NULL, "interva" = NULL)} if you want to calibrate all causes.}

\item{donotcalib_type}{Character. \code{"fixed"} or \code{"learn"} (default).

For \code{"fixed"}, only broad causes that are provided in \code{"donotcalib"} are not calibrated.

For \code{"learn"}, it learns from \code{"Mmat.fixed"} or \code{"Mmat.asDirich"} if any other causes cannot be calibrated.

For \code{"learn"}, it identifies VA causes for which the misclassification rates do not vary across CHAMPS causes.

In that case, the calibration equation becomes ill-conditioned (see the footnote below Section 3.8 in Pramanik et al. (2025)). Currently, we address this by not calibrating VA causes for which the misclassification rates are similar along the rows (CHAMPS causes). VA causes (Columns) for which the rates along the rows (CHAMPS causes) do not vary more that \code{"nocalib.threshold"} are not calibrated. \code{"donotcalib"} is accordingly updated for each CCVA algorithm.}

\item{nocalib.threshold}{Numeric between 0 and 1. The value used for screening VA causes that cannot be calibrated when \code{donotcalib_type = "learn"}. Default: 0.1.}

\item{path_correction}{Logical. \code{TRUE} (default) or \code{FALSE}. Setting \code{TRUE} improves stability in calibration.}

\item{ensemble}{Logical. \code{TRUE} (default) or \code{FALSE}.

Whether to perform ensemble calibration when outputs from multiple algorithms are provided.}

\item{shrink_strength}{Positive numeric. Degree of shrinkage of calibrated cause-specific mortality fraction (CSMF) estimate towards uncalibrated estimates.

Always 0 when \code{path_correction=TRUE}. Defaults to 4 when \code{path_correction=FALSE}.}

\item{lambda_eBayes}{Numeric between 0 and 1. The value used for screening VA causes that cannot be calibrated when \code{donotcalib_type = "learn"}. Default: 0.1.}

\item{nMCMC}{Positive integer. Total number of posterior samples to perform inference on.

Total number of iterations are \code{nBurn + nMCMC*nThin}.

Default 5000.}

\item{nBurn}{Positive integer. Total burn-in in posterior sampling.

Total number of iterations are \code{nBurn + nMCMC*nThin}.

Default 5000.}

\item{nThin}{Positive integer. Number of thinning in posterior sampling.

Total number of iterations are \code{nBurn + nMCMC*nThin}.

Default 1.}

\item{nChain}{Positive integer. Number of chains for STAN sampling.

Default 1.}

\item{nCore}{Positive integer. Number of cores to run multiple chains in parallel for STAN sampling.

Default 1.}

\item{adapt_delta_stan}{Positive numeric between 0 and 1. \code{"adapt_delta"} parameter in \code{rstan}.

Influences the behavior of the No-U-Turn Sampler (NUTS), the primary MCMC sampling algorithm in Stan.

Default 0.9.}

\item{refresh.stan}{Positive integer. Report progress at every \code{refresh.stan}-th iteration.

Default \code{(nBurn + nMCMC*nThin)/10}, that is at every 10\% progress.}

\item{seed}{Numeric. \code{"seed"} parameter in rstan.

Default 1.}

\item{verbose}{Logical. Reports progress or not.

\code{TRUE} (default) or \code{FALSE}.}

\item{saveoutput}{Logical. Save output or not.

\code{TRUE} (default) or \code{FALSE}.}

\item{output_filename}{Character. Output name to save as.

Default \code{paste0("calibratedva_", calibmodel.type)}. That is \code{"calibratedva_Mmatprior"} or \code{"calibratedva_Mmatfixed"}.}

\item{output_dir}{Output directory or file path to save at.}

\item{plot_it}{Logical. Whether to return comparison plot for summary.

\code{TRUE} (default) or \code{FALSE}.}
}
\value{
A named list:
\describe{
\item{input}{A named list of input data}
\item{p_uncalib}{Uncalibrated cause-specific mortality fractions (CSMF) estimates as observed in the data}
\item{p_calib}{Posterior samples of calibrated CSMF estimates}
\item{pcalib_postsumm}{Posterior summaries (mean and 95\% credible interval) of calibrated CSMF estimates}
\item{va_deaths_uncalib}{Uncalibrated cause-specific death counts as observed in the data}
\item{va_deaths_calib_algo}{Algorithm-specific calibrated cause-specific death counts}
\item{va_deaths_calib_ensemble}{Ensemble calibrated cause-specific death counts}
\item{donotcalib}{A logical indicator of causes that are not calibrated for each algorithm}
\item{causes_notcalibrated}{Causes that are not calibrated for each algorithm}
}
}
\description{
VA-calibration function
}
\examples{

\donttest{

######### VA input as specific causes #########
# output from codEAVA() function in the EAVA package and crossVA() function in openVA package

# COMSA-Mozambique: Example (Publicly Available Version)
# Individual-Level Specific (High-Resolution) Cause of Death Data
data(comsamoz_public_openVAout)
head(comsamoz_public_openVAout$data)  # head of the data
comsamoz_public_openVAout$data[1,]  # ID and specific cause of death for individual 1

# VA-calibration for the "neonate" age group and InSilicoVA algorithm
calib_out_specific = vacalibration(va_data = setNames(list(comsamoz_public_openVAout$data),
                                                     list(comsamoz_public_openVAout$va_algo)),
                                   age_group = comsamoz_public_openVAout$age_group,
                                   country = "Mozambique")

### comparing uncalibrated CSMF estimates and posterior summary of calibrated CSMF estimates
calib_out_specific$p_uncalib # uncalibrated
calib_out_specific$pcalib_postsumm["insilicova",,]

######### VA input as broad causes (output from cause_map()) #########

# COMSA-Mozambique: Example (Publicly Available Version)
# Individual-Level Broad Cause of Death Data
data(comsamoz_public_broad)
head(comsamoz_public_broad$data)
comsamoz_public_broad$data[1,]  # binary vector indicating cause of death for individual 1

# VA-calibration for the "neonate" age group and InSilicoVA algorithm
calib_out_broad = vacalibration(va_data = setNames(list(comsamoz_public_broad$data),
                                                   list(comsamoz_public_broad$va_algo)),
                                age_group = comsamoz_public_broad$age_group,
                                country = "Mozambique")

### comparing uncalibrated CSMF estimates and posterior summary of calibrated CSMF estimates
calib_out_broad$p_uncalib # uncalibrated
calib_out_broad$pcalib_postsumm["insilicova",,]

######### VA input as national death counts for different broad causes #########
calib_out_asdeathcount = vacalibration(va_data = setNames(list(colSums(comsamoz_public_broad$data)),
                                                    list(comsamoz_public_broad$va_algo)),
                                       age_group = comsamoz_public_broad$age_group,
                                       country = "Mozambique")

### comparing uncalibrated CSMF estimates and posterior summary of calibrated CSMF estimates
calib_out_asdeathcount$p_uncalib # uncalibrated
calib_out_asdeathcount$pcalib_postsumm["insilicova",,]


######### Example of data based on EAVA and InSilicoVA for neonates in Mozambique #########
## example VA national death count data from EAVA and InSilicoVA
va_data_example = list("eava" = c("congenital_malformation" = 40, "pneumonia" = 175,
                                  "sepsis_meningitis_inf" = 265, "ipre" = 220,
                                  "other" = 30, "prematurity" = 170),
                       "insilicova" = c("congenital_malformation" = 5, "pneumonia" = 145,
                                        "sepsis_meningitis_inf" = 370, "ipre" = 330,
                                        "other" = 60, "prematurity" = 290))

## algorithm-specific and ensemble calibration of EAVA and InSilicoVA
calib_out_ensemble = vacalibration(va_data = va_data_example,
                                   age_group = "neonate",
                                   country = "Mozambique")

### comparing uncalibrated CSMF estimates and posterior summary of calibrated CSMF estimates
calib_out_ensemble$p_uncalib # uncalibrated
calib_out_ensemble$pcalib_postsumm["eava",,] # EAVA-specific calibration
calib_out_ensemble$pcalib_postsumm["insilicova",,] # InSilicoVA-specific calibration
calib_out_ensemble$pcalib_postsumm["ensemble",,] # Ensemble calibration

}

}
